name: CI

on:
  push:
    branches:
      - '*'  # This will trigger the workflow on push to any branch
  pull_request:
    branches:
      - '*'

jobs:
  run-tests:
    strategy:
      fail-fast: false
      matrix:
#        os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        python-version:
          - "3.9"
#          - "3.10"
#          - "3.12"
#          - "3.12-dev"
#          - "pypy-3.8"
#          - "pypy-3.9"
    name: Test
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip version
        run: python -m pip install --upgrade pip

      - name: Update pip wheel
        run: pip install --upgrade setuptools wheel

      - name: Install MySQL/MariaDB dependencies
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y libmysqlclient-dev
            sudo apt-get install mysql-server
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            brew install mysql-client pkg-config
            export PKG_CONFIG_PATH="/opt/homebrew/opt/mysql-client/lib/pkgconfig"
            pip install mysqlclient
          fi

      - name: Install dependencies
        run: python -m pip install -r requirements.txt



#      - name: Start MySQL service (Ubuntu)
#        if: matrix.os == 'ubuntu-latest'
#        run: |
#          sudo systemctl start mysql
#          sudo mysql -u root -proot -e "DROP DATABASE IF EXISTS test_ebdb; CREATE DATABASE test_ebdb;"
      - name: Drop test database if it exists
        run: |
          python manage.py dbshell << EOF
          DROP DATABASE IF EXISTS test_ebdb;
          CREATE DATABASE test_ebdb;
          EOF
#      - name: Install MySQL formula (macOS)
#        if: matrix.os == 'macos-latest'
#        run: brew install mysql
#
#
#      - name: Start MySQL service (macOS)
#        if: matrix.os == 'macos-latest'
#        run: |
#          brew services start mysql
#          mysql -u root -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '${{ secrets.MYSQL_ROOT_PASSWORD }}'; FLUSH PRIVILEGES;"
#          mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e "DROP DATABASE IF EXISTS test_ebdb; CREATE DATABASE test_ebdb;"
      - name: Collect static files
        run: python manage.py collectstatic --noinput

      - name: Run tests
        run: python manage.py test